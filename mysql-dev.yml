apiVersion: v1
kind: PersistentVolume 
metadata:
  name: pv-mysql
spec:
  storageClassName: mysql-sc
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/mysql"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-mysql
spec:
  storageClassName: mysql-sc
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: mysql-sc
provisioner: kubernetes.io/no-provisioner
reclaimPolicy: Retain
volumeBindingMode: WaitForFirstConsumer
---
apiVersion: v1
kind: ConfigMap 
metadata:
  name: mysql-config
data:
  MYSQL_ROOT_PASSWORD: root
  MYSQL_DATABASE: test
  MYSQL_USER: mysql
  MYSQL_PASSWORD: password
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
  labels:
    app: mysql-app
spec:
  selector:
    matchLabels:
      app: mysql-app
  replicas: 1
  template:
    metadata:
      labels:
        app: mysql-app
    spec:
      containers:
      - image: mysql:8
        name: mysql-app
        ports:
        - containerPort: 3306
          protocol: TCP
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: mysql-volume
        envFrom:
        - configMapRef:
            name: mysql-config
      volumes:
      - name: mysql-volume1
        persistentVolumeClaim:
           claimName: pvc-mysql
---
apiVersion: v1
kind: Service
metadata:
  name: s-mysql
spec:
  selector:
    app: mysql-server
  ports:
  - protocol: TCP
    port: 5303
    targetPort: 3306
  type: LoadBalancer




  