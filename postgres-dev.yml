apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-pg
spec: 
  storageClassName: pg-sc
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/pg-vol1"

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-pg
spec:
  storageClassName: pg-sc
  accessModes:
    - ReadWriteOnce
  resources: 
    requests:
      storage: 2Gi

---

apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: pg-sc
provisioner: kubernetes.io/no-provisioner 
reclaimPolicy: Retain 
volumeBindingMode: WaitForFirstConsumer

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: pg-config
  labels:
    app: postgres
data:
  POSTGRES_DB: postdb
  POSTGRES_USER: user
  POSTGRES_PASSWORD: admin123

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
  labels:
    app: postgres-server
spec:
  selector:
    matchLabels:
      app: postgres-server
  replicas: 1
  template:
    metadata:
      labels:
        app: postgres-server
    spec:
      containers:
      - image: postgres:11  
        name: postgres-db1
        ports:
        - containerPort: 5432
          protocol: TCP
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgres-db-volume1
        envFrom:
            - configMapRef:
                name: pg-config
      volumes:
      - name: postgres-db-volume1
        persistentVolumeClaim:
           claimName: pvc-pg
           
---

apiVersion: v1
kind: Service
metadata:
  name: pg-svc
  namespace: axel-namespace
spec:
  selector:
    app: postgres-server
  ports:
    - protocol: TCP
      port: 5300
      targetPort: 5432
  type: LoadBalancer