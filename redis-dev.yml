apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-redis
spec: 
  storageClassName: redis-sc
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/redis-vol1"

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-redis
spec:
  storageClassName: redis-sc
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi

---

apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: redis-sc
provisioner: kubernetes.io/no-provisioner
reclaimPolicy: Retain
volumeBindingMode: WaitForFirstConsumer

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  selfLink: /api/v1/namespaces/axel-namespace/configmaps/redis-config
  label:
    app: redisdb
data:
  redis-config:
    maxmemory 2mb
    maxmemory-policy allkeys-lru
    requirepass "test"
    REDIS_USER: root
    REDIS_PASSWORD: root
    
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-deployment
  labels:
    app: redisdb
spec:
  selector:
    matchLabels:
      app: redis-app
  template:
    metadata:
      labels:
        app: redis-app
    spec:
      containers:
        - name: redis-app
          image: redis
          env:
          - name: Master
            value: "true"
          resources:
            limits:
              memory: '512Mi'
              cpu: '1000m'
          ports:
            - containerPort: 6379
          volumeMounts:
            - mountPath: /var/lib/redis/
              name: redis-volume
      volumes:
        - name: redis-volume
          persistentVolumeClaim:
            claimName: pvc-redis
        - name: config
          configMap:
            name: redis-config
            items:
            - key: redis-config
              path: redis.conf
            
---

apiVersion: v1
kind: Service
metadata:
  name: redis-svc
  label:
    app: redis service
spec:
  selector:
    app: redis-app
  ports:
  - protocol: TCP
    port: 5301
    targetPort: 6379
  type: LoadBalancer